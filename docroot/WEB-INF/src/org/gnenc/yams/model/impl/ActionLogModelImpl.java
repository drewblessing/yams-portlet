/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.gnenc.yams.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import org.gnenc.yams.model.ActionLog;
import org.gnenc.yams.model.ActionLogModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the ActionLog service. Represents a row in the &quot;yams_ActionLog&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link org.gnenc.yams.model.ActionLogModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ActionLogImpl}.
 * </p>
 *
 * @author Drew A. Blessing
 * @see ActionLogImpl
 * @see org.gnenc.yams.model.ActionLog
 * @see org.gnenc.yams.model.ActionLogModel
 * @generated
 */
public class ActionLogModelImpl extends BaseModelImpl<ActionLog>
	implements ActionLogModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a action log model instance should use the {@link org.gnenc.yams.model.ActionLog} interface instead.
	 */
	public static final String TABLE_NAME = "yams_ActionLog";
	public static final Object[][] TABLE_COLUMNS = {
			{ "id_", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "userEmailAddress", Types.VARCHAR },
			{ "modifiedUserId", Types.BIGINT },
			{ "modifiedUserName", Types.VARCHAR },
			{ "modifiedUserEmailAddress", Types.VARCHAR },
			{ "modifiedDescription", Types.VARCHAR },
			{ "modifiedFqgn", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table yams_ActionLog (id_ LONG not null primary key,companyId LONG,userId LONG,userName VARCHAR(75) null,modifiedDate DATE null,userEmailAddress VARCHAR(75) null,modifiedUserId LONG,modifiedUserName VARCHAR(75) null,modifiedUserEmailAddress VARCHAR(75) null,modifiedDescription VARCHAR(75) null,modifiedFqgn VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table yams_ActionLog";
	public static final String ORDER_BY_JPQL = " ORDER BY actionLog.modifiedDate ASC";
	public static final String ORDER_BY_SQL = " ORDER BY yams_ActionLog.modifiedDate ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.org.gnenc.yams.model.ActionLog"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.org.gnenc.yams.model.ActionLog"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.org.gnenc.yams.model.ActionLog"),
			true);
	public static long MODIFIEDDATE_COLUMN_BITMASK = 1L;
	public static long MODIFIEDDESCRIPTION_COLUMN_BITMASK = 2L;
	public static long MODIFIEDFQGN_COLUMN_BITMASK = 4L;
	public static long MODIFIEDUSEREMAILADDRESS_COLUMN_BITMASK = 8L;
	public static long USEREMAILADDRESS_COLUMN_BITMASK = 16L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.org.gnenc.yams.model.ActionLog"));

	public ActionLogModelImpl() {
	}

	public long getPrimaryKey() {
		return _id;
	}

	public void setPrimaryKey(long primaryKey) {
		setId(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_id);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	public Class<?> getModelClass() {
		return ActionLog.class;
	}

	public String getModelClassName() {
		return ActionLog.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("id", getId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("userEmailAddress", getUserEmailAddress());
		attributes.put("modifiedUserId", getModifiedUserId());
		attributes.put("modifiedUserName", getModifiedUserName());
		attributes.put("modifiedUserEmailAddress", getModifiedUserEmailAddress());
		attributes.put("modifiedDescription", getModifiedDescription());
		attributes.put("modifiedFqgn", getModifiedFqgn());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long id = (Long)attributes.get("id");

		if (id != null) {
			setId(id);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String userEmailAddress = (String)attributes.get("userEmailAddress");

		if (userEmailAddress != null) {
			setUserEmailAddress(userEmailAddress);
		}

		Long modifiedUserId = (Long)attributes.get("modifiedUserId");

		if (modifiedUserId != null) {
			setModifiedUserId(modifiedUserId);
		}

		String modifiedUserName = (String)attributes.get("modifiedUserName");

		if (modifiedUserName != null) {
			setModifiedUserName(modifiedUserName);
		}

		String modifiedUserEmailAddress = (String)attributes.get(
				"modifiedUserEmailAddress");

		if (modifiedUserEmailAddress != null) {
			setModifiedUserEmailAddress(modifiedUserEmailAddress);
		}

		String modifiedDescription = (String)attributes.get(
				"modifiedDescription");

		if (modifiedDescription != null) {
			setModifiedDescription(modifiedDescription);
		}

		String modifiedFqgn = (String)attributes.get("modifiedFqgn");

		if (modifiedFqgn != null) {
			setModifiedFqgn(modifiedFqgn);
		}
	}

	public long getId() {
		return _id;
	}

	public void setId(long id) {
		_id = id;
	}

	public long getCompanyId() {
		return _companyId;
	}

	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	public long getUserId() {
		return _userId;
	}

	public void setUserId(long userId) {
		_userId = userId;
	}

	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	public void setUserName(String userName) {
		_userName = userName;
	}

	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public void setModifiedDate(Date modifiedDate) {
		_columnBitmask = -1L;

		if (_originalModifiedDate == null) {
			_originalModifiedDate = _modifiedDate;
		}

		_modifiedDate = modifiedDate;
	}

	public Date getOriginalModifiedDate() {
		return _originalModifiedDate;
	}

	public String getUserEmailAddress() {
		if (_userEmailAddress == null) {
			return StringPool.BLANK;
		}
		else {
			return _userEmailAddress;
		}
	}

	public void setUserEmailAddress(String userEmailAddress) {
		_columnBitmask |= USEREMAILADDRESS_COLUMN_BITMASK;

		if (_originalUserEmailAddress == null) {
			_originalUserEmailAddress = _userEmailAddress;
		}

		_userEmailAddress = userEmailAddress;
	}

	public String getOriginalUserEmailAddress() {
		return GetterUtil.getString(_originalUserEmailAddress);
	}

	public long getModifiedUserId() {
		return _modifiedUserId;
	}

	public void setModifiedUserId(long modifiedUserId) {
		_modifiedUserId = modifiedUserId;
	}

	public String getModifiedUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getModifiedUserId(), "uuid",
			_modifiedUserUuid);
	}

	public void setModifiedUserUuid(String modifiedUserUuid) {
		_modifiedUserUuid = modifiedUserUuid;
	}

	public String getModifiedUserName() {
		if (_modifiedUserName == null) {
			return StringPool.BLANK;
		}
		else {
			return _modifiedUserName;
		}
	}

	public void setModifiedUserName(String modifiedUserName) {
		_modifiedUserName = modifiedUserName;
	}

	public String getModifiedUserEmailAddress() {
		if (_modifiedUserEmailAddress == null) {
			return StringPool.BLANK;
		}
		else {
			return _modifiedUserEmailAddress;
		}
	}

	public void setModifiedUserEmailAddress(String modifiedUserEmailAddress) {
		_columnBitmask |= MODIFIEDUSEREMAILADDRESS_COLUMN_BITMASK;

		if (_originalModifiedUserEmailAddress == null) {
			_originalModifiedUserEmailAddress = _modifiedUserEmailAddress;
		}

		_modifiedUserEmailAddress = modifiedUserEmailAddress;
	}

	public String getOriginalModifiedUserEmailAddress() {
		return GetterUtil.getString(_originalModifiedUserEmailAddress);
	}

	public String getModifiedDescription() {
		if (_modifiedDescription == null) {
			return StringPool.BLANK;
		}
		else {
			return _modifiedDescription;
		}
	}

	public void setModifiedDescription(String modifiedDescription) {
		_columnBitmask |= MODIFIEDDESCRIPTION_COLUMN_BITMASK;

		if (_originalModifiedDescription == null) {
			_originalModifiedDescription = _modifiedDescription;
		}

		_modifiedDescription = modifiedDescription;
	}

	public String getOriginalModifiedDescription() {
		return GetterUtil.getString(_originalModifiedDescription);
	}

	public String getModifiedFqgn() {
		if (_modifiedFqgn == null) {
			return StringPool.BLANK;
		}
		else {
			return _modifiedFqgn;
		}
	}

	public void setModifiedFqgn(String modifiedFqgn) {
		_columnBitmask |= MODIFIEDFQGN_COLUMN_BITMASK;

		if (_originalModifiedFqgn == null) {
			_originalModifiedFqgn = _modifiedFqgn;
		}

		_modifiedFqgn = modifiedFqgn;
	}

	public String getOriginalModifiedFqgn() {
		return GetterUtil.getString(_originalModifiedFqgn);
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			ActionLog.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public ActionLog toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (ActionLog)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public Object clone() {
		ActionLogImpl actionLogImpl = new ActionLogImpl();

		actionLogImpl.setId(getId());
		actionLogImpl.setCompanyId(getCompanyId());
		actionLogImpl.setUserId(getUserId());
		actionLogImpl.setUserName(getUserName());
		actionLogImpl.setModifiedDate(getModifiedDate());
		actionLogImpl.setUserEmailAddress(getUserEmailAddress());
		actionLogImpl.setModifiedUserId(getModifiedUserId());
		actionLogImpl.setModifiedUserName(getModifiedUserName());
		actionLogImpl.setModifiedUserEmailAddress(getModifiedUserEmailAddress());
		actionLogImpl.setModifiedDescription(getModifiedDescription());
		actionLogImpl.setModifiedFqgn(getModifiedFqgn());

		actionLogImpl.resetOriginalValues();

		return actionLogImpl;
	}

	public int compareTo(ActionLog actionLog) {
		int value = 0;

		value = DateUtil.compareTo(getModifiedDate(),
				actionLog.getModifiedDate());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		ActionLog actionLog = null;

		try {
			actionLog = (ActionLog)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long primaryKey = actionLog.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		ActionLogModelImpl actionLogModelImpl = this;

		actionLogModelImpl._originalModifiedDate = actionLogModelImpl._modifiedDate;

		actionLogModelImpl._originalUserEmailAddress = actionLogModelImpl._userEmailAddress;

		actionLogModelImpl._originalModifiedUserEmailAddress = actionLogModelImpl._modifiedUserEmailAddress;

		actionLogModelImpl._originalModifiedDescription = actionLogModelImpl._modifiedDescription;

		actionLogModelImpl._originalModifiedFqgn = actionLogModelImpl._modifiedFqgn;

		actionLogModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<ActionLog> toCacheModel() {
		ActionLogCacheModel actionLogCacheModel = new ActionLogCacheModel();

		actionLogCacheModel.id = getId();

		actionLogCacheModel.companyId = getCompanyId();

		actionLogCacheModel.userId = getUserId();

		actionLogCacheModel.userName = getUserName();

		String userName = actionLogCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			actionLogCacheModel.userName = null;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			actionLogCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			actionLogCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		actionLogCacheModel.userEmailAddress = getUserEmailAddress();

		String userEmailAddress = actionLogCacheModel.userEmailAddress;

		if ((userEmailAddress != null) && (userEmailAddress.length() == 0)) {
			actionLogCacheModel.userEmailAddress = null;
		}

		actionLogCacheModel.modifiedUserId = getModifiedUserId();

		actionLogCacheModel.modifiedUserName = getModifiedUserName();

		String modifiedUserName = actionLogCacheModel.modifiedUserName;

		if ((modifiedUserName != null) && (modifiedUserName.length() == 0)) {
			actionLogCacheModel.modifiedUserName = null;
		}

		actionLogCacheModel.modifiedUserEmailAddress = getModifiedUserEmailAddress();

		String modifiedUserEmailAddress = actionLogCacheModel.modifiedUserEmailAddress;

		if ((modifiedUserEmailAddress != null) &&
				(modifiedUserEmailAddress.length() == 0)) {
			actionLogCacheModel.modifiedUserEmailAddress = null;
		}

		actionLogCacheModel.modifiedDescription = getModifiedDescription();

		String modifiedDescription = actionLogCacheModel.modifiedDescription;

		if ((modifiedDescription != null) &&
				(modifiedDescription.length() == 0)) {
			actionLogCacheModel.modifiedDescription = null;
		}

		actionLogCacheModel.modifiedFqgn = getModifiedFqgn();

		String modifiedFqgn = actionLogCacheModel.modifiedFqgn;

		if ((modifiedFqgn != null) && (modifiedFqgn.length() == 0)) {
			actionLogCacheModel.modifiedFqgn = null;
		}

		return actionLogCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(23);

		sb.append("{id=");
		sb.append(getId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", userEmailAddress=");
		sb.append(getUserEmailAddress());
		sb.append(", modifiedUserId=");
		sb.append(getModifiedUserId());
		sb.append(", modifiedUserName=");
		sb.append(getModifiedUserName());
		sb.append(", modifiedUserEmailAddress=");
		sb.append(getModifiedUserEmailAddress());
		sb.append(", modifiedDescription=");
		sb.append(getModifiedDescription());
		sb.append(", modifiedFqgn=");
		sb.append(getModifiedFqgn());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(37);

		sb.append("<model><model-name>");
		sb.append("org.gnenc.yams.model.ActionLog");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>id</column-name><column-value><![CDATA[");
		sb.append(getId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userEmailAddress</column-name><column-value><![CDATA[");
		sb.append(getUserEmailAddress());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedUserId</column-name><column-value><![CDATA[");
		sb.append(getModifiedUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedUserName</column-name><column-value><![CDATA[");
		sb.append(getModifiedUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedUserEmailAddress</column-name><column-value><![CDATA[");
		sb.append(getModifiedUserEmailAddress());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDescription</column-name><column-value><![CDATA[");
		sb.append(getModifiedDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedFqgn</column-name><column-value><![CDATA[");
		sb.append(getModifiedFqgn());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = ActionLog.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			ActionLog.class
		};
	private long _id;
	private long _companyId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _modifiedDate;
	private Date _originalModifiedDate;
	private String _userEmailAddress;
	private String _originalUserEmailAddress;
	private long _modifiedUserId;
	private String _modifiedUserUuid;
	private String _modifiedUserName;
	private String _modifiedUserEmailAddress;
	private String _originalModifiedUserEmailAddress;
	private String _modifiedDescription;
	private String _originalModifiedDescription;
	private String _modifiedFqgn;
	private String _originalModifiedFqgn;
	private long _columnBitmask;
	private ActionLog _escapedModelProxy;
}