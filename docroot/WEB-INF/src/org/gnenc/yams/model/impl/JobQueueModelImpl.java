/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.gnenc.yams.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import org.gnenc.yams.model.JobQueue;
import org.gnenc.yams.model.JobQueueModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the JobQueue service. Represents a row in the &quot;yams_JobQueue&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link org.gnenc.yams.model.JobQueueModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link JobQueueImpl}.
 * </p>
 *
 * @author Drew A. Blessing
 * @see JobQueueImpl
 * @see org.gnenc.yams.model.JobQueue
 * @see org.gnenc.yams.model.JobQueueModel
 * @generated
 */
public class JobQueueModelImpl extends BaseModelImpl<JobQueue>
	implements JobQueueModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a job queue model instance should use the {@link org.gnenc.yams.model.JobQueue} interface instead.
	 */
	public static final String TABLE_NAME = "yams_JobQueue";
	public static final Object[][] TABLE_COLUMNS = {
			{ "id_", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "userEmailAddress", Types.VARCHAR },
			{ "jobUserId", Types.BIGINT },
			{ "jobUserName", Types.VARCHAR },
			{ "jobUserEmailAddress", Types.VARCHAR },
			{ "jobDescription", Types.VARCHAR },
			{ "jobAction", Types.VARCHAR },
			{ "jobDate", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table yams_JobQueue (id_ LONG not null primary key,companyId LONG,userId LONG,userName VARCHAR(75) null,modifiedDate DATE null,userEmailAddress VARCHAR(75) null,jobUserId LONG,jobUserName VARCHAR(75) null,jobUserEmailAddress VARCHAR(75) null,jobDescription VARCHAR(75) null,jobAction VARCHAR(75) null,jobDate DATE null)";
	public static final String TABLE_SQL_DROP = "drop table yams_JobQueue";
	public static final String ORDER_BY_JPQL = " ORDER BY jobQueue.modifiedDate ASC";
	public static final String ORDER_BY_SQL = " ORDER BY yams_JobQueue.modifiedDate ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.org.gnenc.yams.model.JobQueue"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.org.gnenc.yams.model.JobQueue"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.org.gnenc.yams.model.JobQueue"),
			true);
	public static long JOBACTION_COLUMN_BITMASK = 1L;
	public static long JOBDATE_COLUMN_BITMASK = 2L;
	public static long JOBUSEREMAILADDRESS_COLUMN_BITMASK = 4L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.org.gnenc.yams.model.JobQueue"));

	public JobQueueModelImpl() {
	}

	public long getPrimaryKey() {
		return _id;
	}

	public void setPrimaryKey(long primaryKey) {
		setId(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_id);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	public Class<?> getModelClass() {
		return JobQueue.class;
	}

	public String getModelClassName() {
		return JobQueue.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("id", getId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("userEmailAddress", getUserEmailAddress());
		attributes.put("jobUserId", getJobUserId());
		attributes.put("jobUserName", getJobUserName());
		attributes.put("jobUserEmailAddress", getJobUserEmailAddress());
		attributes.put("jobDescription", getJobDescription());
		attributes.put("jobAction", getJobAction());
		attributes.put("jobDate", getJobDate());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long id = (Long)attributes.get("id");

		if (id != null) {
			setId(id);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String userEmailAddress = (String)attributes.get("userEmailAddress");

		if (userEmailAddress != null) {
			setUserEmailAddress(userEmailAddress);
		}

		Long jobUserId = (Long)attributes.get("jobUserId");

		if (jobUserId != null) {
			setJobUserId(jobUserId);
		}

		String jobUserName = (String)attributes.get("jobUserName");

		if (jobUserName != null) {
			setJobUserName(jobUserName);
		}

		String jobUserEmailAddress = (String)attributes.get(
				"jobUserEmailAddress");

		if (jobUserEmailAddress != null) {
			setJobUserEmailAddress(jobUserEmailAddress);
		}

		String jobDescription = (String)attributes.get("jobDescription");

		if (jobDescription != null) {
			setJobDescription(jobDescription);
		}

		String jobAction = (String)attributes.get("jobAction");

		if (jobAction != null) {
			setJobAction(jobAction);
		}

		Date jobDate = (Date)attributes.get("jobDate");

		if (jobDate != null) {
			setJobDate(jobDate);
		}
	}

	public long getId() {
		return _id;
	}

	public void setId(long id) {
		_id = id;
	}

	public long getCompanyId() {
		return _companyId;
	}

	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	public long getUserId() {
		return _userId;
	}

	public void setUserId(long userId) {
		_userId = userId;
	}

	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	public void setUserName(String userName) {
		_userName = userName;
	}

	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public void setModifiedDate(Date modifiedDate) {
		_columnBitmask = -1L;

		_modifiedDate = modifiedDate;
	}

	public String getUserEmailAddress() {
		if (_userEmailAddress == null) {
			return StringPool.BLANK;
		}
		else {
			return _userEmailAddress;
		}
	}

	public void setUserEmailAddress(String userEmailAddress) {
		_userEmailAddress = userEmailAddress;
	}

	public long getJobUserId() {
		return _jobUserId;
	}

	public void setJobUserId(long jobUserId) {
		_jobUserId = jobUserId;
	}

	public String getJobUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getJobUserId(), "uuid", _jobUserUuid);
	}

	public void setJobUserUuid(String jobUserUuid) {
		_jobUserUuid = jobUserUuid;
	}

	public String getJobUserName() {
		if (_jobUserName == null) {
			return StringPool.BLANK;
		}
		else {
			return _jobUserName;
		}
	}

	public void setJobUserName(String jobUserName) {
		_jobUserName = jobUserName;
	}

	public String getJobUserEmailAddress() {
		if (_jobUserEmailAddress == null) {
			return StringPool.BLANK;
		}
		else {
			return _jobUserEmailAddress;
		}
	}

	public void setJobUserEmailAddress(String jobUserEmailAddress) {
		_columnBitmask |= JOBUSEREMAILADDRESS_COLUMN_BITMASK;

		if (_originalJobUserEmailAddress == null) {
			_originalJobUserEmailAddress = _jobUserEmailAddress;
		}

		_jobUserEmailAddress = jobUserEmailAddress;
	}

	public String getOriginalJobUserEmailAddress() {
		return GetterUtil.getString(_originalJobUserEmailAddress);
	}

	public String getJobDescription() {
		if (_jobDescription == null) {
			return StringPool.BLANK;
		}
		else {
			return _jobDescription;
		}
	}

	public void setJobDescription(String jobDescription) {
		_jobDescription = jobDescription;
	}

	public String getJobAction() {
		if (_jobAction == null) {
			return StringPool.BLANK;
		}
		else {
			return _jobAction;
		}
	}

	public void setJobAction(String jobAction) {
		_columnBitmask |= JOBACTION_COLUMN_BITMASK;

		if (_originalJobAction == null) {
			_originalJobAction = _jobAction;
		}

		_jobAction = jobAction;
	}

	public String getOriginalJobAction() {
		return GetterUtil.getString(_originalJobAction);
	}

	public Date getJobDate() {
		return _jobDate;
	}

	public void setJobDate(Date jobDate) {
		_columnBitmask |= JOBDATE_COLUMN_BITMASK;

		if (_originalJobDate == null) {
			_originalJobDate = _jobDate;
		}

		_jobDate = jobDate;
	}

	public Date getOriginalJobDate() {
		return _originalJobDate;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			JobQueue.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public JobQueue toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (JobQueue)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public Object clone() {
		JobQueueImpl jobQueueImpl = new JobQueueImpl();

		jobQueueImpl.setId(getId());
		jobQueueImpl.setCompanyId(getCompanyId());
		jobQueueImpl.setUserId(getUserId());
		jobQueueImpl.setUserName(getUserName());
		jobQueueImpl.setModifiedDate(getModifiedDate());
		jobQueueImpl.setUserEmailAddress(getUserEmailAddress());
		jobQueueImpl.setJobUserId(getJobUserId());
		jobQueueImpl.setJobUserName(getJobUserName());
		jobQueueImpl.setJobUserEmailAddress(getJobUserEmailAddress());
		jobQueueImpl.setJobDescription(getJobDescription());
		jobQueueImpl.setJobAction(getJobAction());
		jobQueueImpl.setJobDate(getJobDate());

		jobQueueImpl.resetOriginalValues();

		return jobQueueImpl;
	}

	public int compareTo(JobQueue jobQueue) {
		int value = 0;

		value = DateUtil.compareTo(getModifiedDate(), jobQueue.getModifiedDate());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		JobQueue jobQueue = null;

		try {
			jobQueue = (JobQueue)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long primaryKey = jobQueue.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		JobQueueModelImpl jobQueueModelImpl = this;

		jobQueueModelImpl._originalJobUserEmailAddress = jobQueueModelImpl._jobUserEmailAddress;

		jobQueueModelImpl._originalJobAction = jobQueueModelImpl._jobAction;

		jobQueueModelImpl._originalJobDate = jobQueueModelImpl._jobDate;

		jobQueueModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<JobQueue> toCacheModel() {
		JobQueueCacheModel jobQueueCacheModel = new JobQueueCacheModel();

		jobQueueCacheModel.id = getId();

		jobQueueCacheModel.companyId = getCompanyId();

		jobQueueCacheModel.userId = getUserId();

		jobQueueCacheModel.userName = getUserName();

		String userName = jobQueueCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			jobQueueCacheModel.userName = null;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			jobQueueCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			jobQueueCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		jobQueueCacheModel.userEmailAddress = getUserEmailAddress();

		String userEmailAddress = jobQueueCacheModel.userEmailAddress;

		if ((userEmailAddress != null) && (userEmailAddress.length() == 0)) {
			jobQueueCacheModel.userEmailAddress = null;
		}

		jobQueueCacheModel.jobUserId = getJobUserId();

		jobQueueCacheModel.jobUserName = getJobUserName();

		String jobUserName = jobQueueCacheModel.jobUserName;

		if ((jobUserName != null) && (jobUserName.length() == 0)) {
			jobQueueCacheModel.jobUserName = null;
		}

		jobQueueCacheModel.jobUserEmailAddress = getJobUserEmailAddress();

		String jobUserEmailAddress = jobQueueCacheModel.jobUserEmailAddress;

		if ((jobUserEmailAddress != null) &&
				(jobUserEmailAddress.length() == 0)) {
			jobQueueCacheModel.jobUserEmailAddress = null;
		}

		jobQueueCacheModel.jobDescription = getJobDescription();

		String jobDescription = jobQueueCacheModel.jobDescription;

		if ((jobDescription != null) && (jobDescription.length() == 0)) {
			jobQueueCacheModel.jobDescription = null;
		}

		jobQueueCacheModel.jobAction = getJobAction();

		String jobAction = jobQueueCacheModel.jobAction;

		if ((jobAction != null) && (jobAction.length() == 0)) {
			jobQueueCacheModel.jobAction = null;
		}

		Date jobDate = getJobDate();

		if (jobDate != null) {
			jobQueueCacheModel.jobDate = jobDate.getTime();
		}
		else {
			jobQueueCacheModel.jobDate = Long.MIN_VALUE;
		}

		return jobQueueCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(25);

		sb.append("{id=");
		sb.append(getId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", userEmailAddress=");
		sb.append(getUserEmailAddress());
		sb.append(", jobUserId=");
		sb.append(getJobUserId());
		sb.append(", jobUserName=");
		sb.append(getJobUserName());
		sb.append(", jobUserEmailAddress=");
		sb.append(getJobUserEmailAddress());
		sb.append(", jobDescription=");
		sb.append(getJobDescription());
		sb.append(", jobAction=");
		sb.append(getJobAction());
		sb.append(", jobDate=");
		sb.append(getJobDate());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(40);

		sb.append("<model><model-name>");
		sb.append("org.gnenc.yams.model.JobQueue");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>id</column-name><column-value><![CDATA[");
		sb.append(getId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userEmailAddress</column-name><column-value><![CDATA[");
		sb.append(getUserEmailAddress());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>jobUserId</column-name><column-value><![CDATA[");
		sb.append(getJobUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>jobUserName</column-name><column-value><![CDATA[");
		sb.append(getJobUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>jobUserEmailAddress</column-name><column-value><![CDATA[");
		sb.append(getJobUserEmailAddress());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>jobDescription</column-name><column-value><![CDATA[");
		sb.append(getJobDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>jobAction</column-name><column-value><![CDATA[");
		sb.append(getJobAction());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>jobDate</column-name><column-value><![CDATA[");
		sb.append(getJobDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = JobQueue.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			JobQueue.class
		};
	private long _id;
	private long _companyId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _modifiedDate;
	private String _userEmailAddress;
	private long _jobUserId;
	private String _jobUserUuid;
	private String _jobUserName;
	private String _jobUserEmailAddress;
	private String _originalJobUserEmailAddress;
	private String _jobDescription;
	private String _jobAction;
	private String _originalJobAction;
	private Date _jobDate;
	private Date _originalJobDate;
	private long _columnBitmask;
	private JobQueue _escapedModelProxy;
}